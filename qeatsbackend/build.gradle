buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
}

group = 'com.qeats'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8


apply plugin:'java'

repositories {
    mavenCentral()
}


dependencies {

    def buildId = System.currentTimeMillis()
    def springCoreVersion = "5.0.9.RELEASE"
    def junitVersion = "5.3.1"
    def junitPlatformLauncherVersion = "1.3.1"
    def mockitoVersion = "2.22.0"
    def swaggerVersion = "2.9.2"
    def lombokVersion = "1.18.22"
    def modelMapperVersion = "2.3.2"


    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation("org.springframework.boot:spring-boot-starter-log4j2") {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-core'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-jul'
        exclude group: 'org.slf4j', module: 'jul-to-slf4j'
    }

    // log4j2 dependencies
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.16.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.16.0'
    //compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.12.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-jul', version: '2.16.0'
    implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.28'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.28'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'
    testRuntimeOnly("org.apache.logging.log4j:log4j-core:2.16.0")
    testRuntimeOnly("org.apache.logging.log4j:log4j-jul:2.16.0")

    // required for json layout


    implementation "org.modelmapper:modelmapper:$modelMapperVersion"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation group: "javax.inject", name: "javax.inject", version: "1"
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation 'org.springframework.data:spring-data-redis'
    implementation group: "com.google.guava", name: "guava", version: "20.0"
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    runtimeOnly "org.springframework.boot:spring-boot-devtools"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    implementation "io.springfox:springfox-swagger2:$swaggerVersion"
    implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"
    implementation group: 'ch.hsr', name: 'geohash', version: '1.4.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation "ch.hsr:geohash:1.3.0"
    implementation 'redis.clients:jedis:2.9.0'
    implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"

    implementation "ch.hsr:geohash:1.3.0"

    testImplementation group: 'com.github.kstyrc', name: 'embedded-redis', version: '0.6'
//    testCompile "ai.grakn:redis-mock:0.1.3"

    testImplementation("org.mockito:mockito-junit-jupiter:$mockitoVersion")
    testImplementation("org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE") {
        exclude group: "junit", module: "junit"
    }

    testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo"
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testImplementation("org.junit.platform:junit-platform-launcher" +
            ":$junitPlatformLauncherVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}


test {
    ignoreFailures=true
    useJUnitPlatform()
}


